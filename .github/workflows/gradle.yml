name: build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize, closed]

jobs:
  test:
    name: Input check
    runs-on: ubuntu-latest
    steps:
      - name: Checking your input
        run: |
          echo "github.event.pull_request.merged           : $MERGED_RAW"
          echo "github.event.pull_request.merged == 'true' : $MERGED_TRUE_STR"
          echo "github.event.pull_request.merged  == true  : $MERGED_TRUE_BOOL"
        env:
          MERGED_RAW: ${{ github.event.pull_request.merged }}
          MERGED_TRUE_STR: ${{ github.event.pull_request.merged == 'true' }}
          MERGED_TRUE_BOOL: ${{ github.event.pull_request.merged == true }}
  build:
    if: github.event.pull_request.merged
    name: Input check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checking your input
        run: |
          echo "github.event.pull_request.merged           : $MERGED_RAW"
          echo "github.event.pull_request.merged == 'true' : $MERGED_TRUE_STR"
          echo "github.event.pull_request.merged  == true  : $MERGED_TRUE_BOOL"
        env:
          MERGED_RAW: ${{ github.event.pull_request.merged }}
          MERGED_TRUE_STR: ${{ github.event.pull_request.merged == 'true' }}
          MERGED_TRUE_BOOL: ${{ github.event.pull_request.merged == true }}


#      - uses: actions/checkout@v3

#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: "adopt"

#      - name: make application.properties
#        run: |
#          cd ./src/main/resources
#          touch ./application.properties
#          echo "${{ secrets.PROPERTIES_DEV }}" > ./application.properties
#        shell: bash
#
#      - name: Build with Gradle
#        run: |
#          chmod +x ./gradlew
#          ./gradlew clean build -x test

#      - name: Docker build & push to prod
#        run: |
#          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/springboot-github-actions-test .
#          docker push ${{ secrets.DOCKER_REPO }}/springboot-github-actions-test
#
#      - name: Deploy to Server
#        uses: appleboy/ssh-action@master
#        id: deploy
#        with:
#          host: ${{ secrets.HOST }}
#          username: directors-dev
#          key: ${{ secrets.KEY }}
#          envs: GITHUB_SHA
#          script: |
#            sudo docker rm -f $(docker ps -qa)
#            sudo docker pull ${{ secrets.DOCKER_REPO }}/springboot-github-actions-test
#            docker-compose up -d
#            docker image prune -f